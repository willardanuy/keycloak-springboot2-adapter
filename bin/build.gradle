buildscript {
	ext {
		springBootVersion = '2.0.0.RELEASE'
	}
	repositories {
		maven {
			url "https://plugins.gradle.org/m2/"
		}
		mavenCentral()
	}
	dependencies {
		classpath("io.spring.gradle:dependency-management-plugin:0.5.4.RELEASE")
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath('gradle.plugin.com.palantir.gradle.docker:gradle-docker:0.13.0')
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'com.palantir.docker'
apply plugin: 'io.spring.dependency-management'

group = 'com.yandeh.product'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

docker {
	name "yh-product-services"
	files jar.archivePath
	buildArgs(['JAR_FILE': "${jar.archiveName}"])
}

task tagPush(type: Exec) {
	dependsOn "docker"

	commandLine "./tag_push.sh"

	standardOutput = new ByteArrayOutputStream()

	doLast {
		println standardOutput.toString()
	}

	ext.output = {
		return standardOutput.toString()
	}
}

repositories {
	mavenCentral()
}

dependencyManagement {
	imports {
		mavenBom 'com.amazonaws:aws-java-sdk-bom:1.10.47'
	}
}


dependencies {
	compile('org.springframework.boot:spring-boot-starter-actuator')
	compile('org.springframework.boot:spring-boot-starter-jdbc')
	compile('org.springframework.boot:spring-boot-starter-web')
	compile('io.springfox:springfox-swagger2:2.6.1')
	compile('io.springfox:springfox-swagger-ui:2.6.1')
	runtime('org.postgresql:postgresql')
	testCompile('org.springframework.boot:spring-boot-starter-test')
}